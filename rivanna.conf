include required(classpath("application"))

# Cromwell "system" settings
system {
  # If 'true' then when Cromwell starts, it tries to restart incomplete workflows
  workflow-restart = true

  # Cromwell will cap the number of running workflows at N
  max-concurrent-workflows = 1

  # Number of seconds between workflow launches
  new-workflow-poll-rate = 60

  job-rate-control {
    jobs = 3
    per = 1 second
  }
}

backend {
  # Override the default backend.
  default = "SLURM"

  # The list of providers.
  providers {
    SLURM {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        concurrent-job-limit = 500
        script-epilogue = ""
        runtime-attributes = """
        Int nodes = 1
        Int cpus = 1
        Int runtime_minutes = 1440
        Int requested_memory_mb_per_core = 6000
        String queue = "standard"
        String account = "ratan"
        """

        submit = """
           sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} \
           -t ${runtime_minutes} \
           -p ${queue} \
           ${"-n " + cpus} \
           --mem-per-cpu=${requested_memory_mb_per_core} \
           -A ${account} \
           -N ${nodes} \
           --wrap "/bin/bash ${script}"
        """
        kill = "scancel ${job_id}"
        check-alive = "squeue -j ${job_id}"
        job-id-regex = "Submitted batch job (\\d+).*"
      }
    }
  }
}
