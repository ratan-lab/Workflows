include required(classpath("application"))

# Cromwell "system" settings
system {
  # If 'true' then when Cromwell starts, it tries to restart incomplete workflows
  workflow-restart = true

  # Cromwell will cap the number of running workflows at N
  max-concurrent-workflows = 1

  # Number of seconds between workflow launches
  new-workflow-poll-rate = 30

  input-read-limits {
    lines = 512000
  }
}

backend {
  # Override the default backend.
  default = "LocalExample"

  # The list of providers.
  providers {

    # The local provider is included by default in the reference.conf. This is an example.

    # Define a new backend provider.
    LocalExample {
      # The actor that runs the backend. In this case, it's the Shared File 
      # System (SFS) ConfigBackend.
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"

      # The backend custom configuration.
      config {

        # Optional limits on the number of concurrent jobs
        concurrent-job-limit = 5

        # If true submits scripts to the bash background using "&". 
        # Only usefull for dispatchers that do NOT submit
        # the job and then immediately return a scheduled job id.
        run-in-background = true

        # `temporary-directory` creates the temporary directory for commands.
        # If this value is not set explicitly, the default value creates a 
        # unique temporary directory, equivalent to:
        #temporary-directory = "$(mktemp -d \"$TMPDIR\"/tmp.XXXXXX)"

        # Submit string when there is no "docker" runtime attribute.
        submit = "/usr/bin/env bash ${script}"

        # Root directory where Cromwell writes job results.  
        # This directory must be visible and writeable by the Cromwell process 
        # as well as the jobs that Cromwell launches.
        root = "cromwell-executions"

        # File system configuration.
        filesystems {

          # For SFS backends, the "local" configuration specifies how files are 
          # handled.
          local {

            localization: [
              "soft-link"
            ]

            # Call caching strategies
            caching {
              duplication-strategy: [
                "soft-link"
              ]

              hashing-strategy: "path"

              check-sibling-md5: true
            }
          }
        }

        # The defaults for runtime attributes if not provided.
        default-runtime-attributes {
          failOnStderr: false
          continueOnReturnCode: 0
        }
      }
    }
  }
}
